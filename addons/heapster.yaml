apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    name: influxGrafana
  name: influxdb-grafana
  namespace: kube-system
spec:
  replicas: 1
  selector:
    name: influxGrafana
  template:
    metadata:
      labels:
        name: influxGrafana
    spec:
      containers:
      - name: influxdb
        image: kubernetesonarm/influxdb
        volumeMounts:
        - mountPath: /data
          name: influxdb-storage
#      - name: grafana
#        image: kubernetesonarm/grafana
#        env:
#          - name: INFLUXDB_SERVICE_URL
#            value: http://monitoring-influxdb:8086
            # The following env variables are required to make Grafana accessible via
            # the kubernetes api-server proxy. On production clusters, we recommend
            # removing these env variables, setup auth for grafana, and expose the grafana
            # service using a LoadBalancer or a public IP.
#          - name: GF_AUTH_BASIC_ENABLED
#            value: "false"
#          - name: GF_AUTH_ANONYMOUS_ENABLED
#            value: "true"
#          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
#            value: Admin
#          - name: GF_SERVER_ROOT_URL
#            value: /api/v1/proxy/namespaces/kube-system/services/monitoring-grafana/
#        volumeMounts:
#        - mountPath: /var
#          name: grafana-storage
      volumes:
      - name: influxdb-storage
        emptyDir: {}
#      - name: grafana-storage
#        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels: null
  name: monitoring-influxdb
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 8083
    targetPort: 8083
  - name: api
    port: 8086
    targetPort: 8086
  selector:
    name: influxGrafana
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: "monitoring-grafana"
  name: monitoring-grafana
  namespace: kube-system
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    name: influxGrafana
---
apiVersion: v1
kind: ReplicationController
metadata:
  labels:
    k8s-app: heapster
    name: heapster
  name: heapster
  namespace: kube-system
spec:
  replicas: 1
  selector:
    k8s-app: heapster
  template:
    metadata:
      labels:
        k8s-app: heapster
    spec:
      containers:
      - name: heapster
        image: kubernetesonarm/heapster
        imagePullPolicy: IfNotPresent
        command:
        - /heapster
        - --source=kubernetes
        - --sink=influxdb:http://monitoring-influxdb:8086
        volumeMounts:
        - name: ssl-certs
          mountPath: /etc/ssl/certs
          readOnly: true
      volumes:
      - name: ssl-certs
        hostPath:
          path: /etc/ssl/certs
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/cluster-service: 'true'
    kubernetes.io/name: "Heapster"
  name: heapster
  namespace: kube-system
spec:
  ports:
  - port: 80
    targetPort: 8082
  selector:
    k8s-app: heapster
---
